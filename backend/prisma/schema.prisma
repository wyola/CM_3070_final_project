generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Organization {
  id             Int      @id @default(autoincrement())
  name           String
  krs            String   @unique
  email          String   @unique
  phone          String
  city           String
  postalCode     String
  address        String
  voivodeship    String
  geolocation    String?
  logo           String
  description    String?
  website        String?
  acceptsReports Boolean  @default(false)
  animals        String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  user           User?
  needs          Need[]
  reportAssignments ReportAssignment[]
}

model User {
  id             Int            @id @default(autoincrement())
  email          String         @unique
  password       String
  organizationId Int            @unique
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
  refreshTokens  RefreshToken[]
  organization   Organization   @relation(fields: [organizationId], references: [id])
}

model RefreshToken {
  id        Int      @id @default(autoincrement())
  token     String   @unique
  userId    Int
  expiresAt DateTime
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
}

model Need {
  id           Int          @id @default(autoincrement())
  kind         String
  priority     Boolean      @default(false)
  description  String
  createdAt    DateTime     @default(now())
  organization Organization @relation(fields: [organizationId], references: [id])
  organizationId Int
}

model Report {
  id             Int              @id @default(autoincrement())
  title          String
  description    String
  address        String?
  city           String?
  postalCode     String?
  geolocation    String
  image          String?
  contactName    String?
  contactEmail   String?
  contactPhone   String?
  status         String
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  assignments    ReportAssignment[]
}

model ReportAssignment {
  id             Int              @id @default(autoincrement())
  reportId       Int
  organizationId Int
  viewedAt       DateTime?
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  
  report         Report           @relation(fields: [reportId], references: [id])
  organization   Organization     @relation(fields: [organizationId], references: [id])

  @@unique([reportId, organizationId])
}
